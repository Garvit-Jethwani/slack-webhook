// Test generated by RoostGPT for test slack-webhook-java using AI Type Open AI and AI Model gpt-4

package net.gpedro.integrations.slack;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.MockitoAnnotations;
import org.junit.Assert;

public class SlackField_addAllowedMarkdown_148e9e4829_Test {

    private SlackField slackField;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        slackField = new SlackField();
    }

    @Test
    public void testAddAllowedMarkdown_ValidField() {
        String validField = "text";
        slackField.addAllowedMarkdown(validField);
        Assert.assertTrue(slackField.getAllowMarkdown().contains(validField));
    }

    @Test
    public void testAddAllowedMarkdown_InvalidField() {
        String invalidField = "invalid";
        try {
            slackField.addAllowedMarkdown(invalidField);
            Assert.fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            Assert.assertEquals(invalidField + " is not allowed. Allowed: pretext, text, title, fields and fallback", e.getMessage());
        }
    }

    @Test
    public void testAddAllowedMarkdown_NullField() {
        try {
            slackField.addAllowedMarkdown(null);
            Assert.fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            Assert.assertEquals("field is null", e.getMessage());
        }
    }
}
