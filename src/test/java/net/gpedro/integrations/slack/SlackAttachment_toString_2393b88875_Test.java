// Test generated by RoostGPT for test slack-webhook-java using AI Type Open AI and AI Model gpt-4

package net.gpedro.integrations.slack;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class SlackAttachment_toString_2393b88875_Test {

    private SlackAttachment slackAttachment;

    @BeforeEach
    public void setup() {
        slackAttachment = new SlackAttachment();
        slackAttachment.setFallback("fallback");
        slackAttachment.setText("text");
        slackAttachment.setPretext("pretext");
        slackAttachment.setColor("color");
        slackAttachment.setAuthorName("authorName");
        slackAttachment.setAuthorLink("authorLink");
        slackAttachment.setAuthorIcon("authorIcon");
        slackAttachment.setTitle("title");
        slackAttachment.setTitleLink("titleLink");
        slackAttachment.setImageUrl("imageUrl");
        slackAttachment.setThumbUrl("thumbUrl");
        slackAttachment.setMarkdownAttributes(new HashSet<>());
        slackAttachment.setFields(new ArrayList<>());
        slackAttachment.setTimestamp(new Date());
        slackAttachment.setFooter("footer");
        slackAttachment.setFooterIcon("footerIcon");
    }

    @Test
    public void testToString() {
        String expected = "SlackAttachment{" +
                "fallback='fallback'" +
                ", text='text'" +
                ", pretext='pretext'" +
                ", color='color'" +
                ", authorName='authorName'" +
                ", authorLink='authorLink'" +
                ", authorIcon='authorIcon'" +
                ", title='title'" +
                ", titleLink='titleLink'" +
                ", imageUrl='imageUrl'" +
                ", thumbUrl='thumbUrl'" +
                ", markdownAttributes=" + new HashSet<>() +
                ", fields=" + new ArrayList<>() +
                ", ts=" + slackAttachment.getTimestamp() +
                ", footer='footer'" +
                ", footerIcon='footerIcon'" +
                '}';
        assertEquals(expected, slackAttachment.toString());
    }

    @Test
    public void testToStringWithNullValues() {
        slackAttachment = new SlackAttachment();
        String expected = "SlackAttachment{" +
                "fallback='null'" +
                ", text='null'" +
                ", pretext='null'" +
                ", color='null'" +
                ", authorName='null'" +
                ", authorLink='null'" +
                ", authorIcon='null'" +
                ", title='null'" +
                ", titleLink='null'" +
                ", imageUrl='null'" +
                ", thumbUrl='null'" +
                ", markdownAttributes=null" +
                ", fields=null" +
                ", ts=null" +
                ", footer='null'" +
                ", footerIcon='null'" +
                '}';
        assertEquals(expected, slackAttachment.toString());
    }
}
