// Test generated by RoostGPT for test slack-webhook-java using AI Type Open AI and AI Model gpt-4

package net.gpedro.integrations.slack;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

@SpringBootTest
public class SlackMessage_setUsername_741bb0df92_Test {

    private SlackMessage slackMessage;

    @BeforeEach
    public void setUp() {
        slackMessage = Mockito.mock(SlackMessage.class);
    }

    @Test
    public void testSetUsername_Success() {
        String expectedUsername = "testUser";

        Mockito.when(slackMessage.setUsername(expectedUsername)).thenReturn(slackMessage);
        Mockito.when(slackMessage.getUsername()).thenReturn(expectedUsername);

        slackMessage.setUsername(expectedUsername);
        String actualUsername = slackMessage.getUsername();

        assertEquals(expectedUsername, actualUsername);
    }

    @Test
    public void testSetUsername_Null() {
        String expectedUsername = null;

        Mockito.when(slackMessage.setUsername(expectedUsername)).thenReturn(slackMessage);
        Mockito.when(slackMessage.getUsername()).thenReturn(null);

        slackMessage.setUsername(expectedUsername);
        String actualUsername = slackMessage.getUsername();

        assertEquals(expectedUsername, actualUsername);
    }
}
