// Test generated by RoostGPT for test slack-webhook-java using AI Type Open AI and AI Model gpt-4

package net.gpedro.integrations.slack;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import java.util.HashSet;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

public class SlackAttachment_removeMarkdownAttribute_5bb9c16233_Test {

    private SlackAttachment slackAttachment;
    private Set<String> markdownAttributes;

    @BeforeEach
    public void setup() {
        slackAttachment = Mockito.mock(SlackAttachment.class);
        markdownAttributes = new HashSet<>();
        markdownAttributes.add("title");
        markdownAttributes.add("text");
        Mockito.when(slackAttachment.getMarkdownAttributes()).thenReturn(markdownAttributes);
    }

    @Test
    public void testRemoveMarkdownAttribute() {
        Mockito.when(slackAttachment.removeMarkdownAttribute("title")).thenCallRealMethod();
        slackAttachment.removeMarkdownAttribute("title");
        Mockito.verify(slackAttachment).removeMarkdownAttribute("title");
        assertNotEquals(markdownAttributes, slackAttachment.getMarkdownAttributes());
    }

    @Test
    public void testRemoveMarkdownAttributeNotExist() {
        Mockito.when(slackAttachment.removeMarkdownAttribute("image")).thenCallRealMethod();
        slackAttachment.removeMarkdownAttribute("image");
        Mockito.verify(slackAttachment).removeMarkdownAttribute("image");
        assertEquals(markdownAttributes, slackAttachment.getMarkdownAttributes());
    }
}
