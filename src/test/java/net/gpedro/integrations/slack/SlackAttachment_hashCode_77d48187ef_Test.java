// Test generated by RoostGPT for test slack-webhook-java using AI Type Open AI and AI Model gpt-4

package net.gpedro.integrations.slack;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class SlackAttachment_hashCode_77d48187ef_Test {

    private SlackAttachment slackAttachment;

    @BeforeEach
    public void setUp() {
        slackAttachment = new SlackAttachment();
    }

    @Test
    public void testHashCode_allNull() {
        int expected = 0;
        int actual = slackAttachment.hashCode();
        assertEquals(expected, actual);
    }

    @Test
    public void testHashCode_allNonNull() {
        slackAttachment.setFallback("fallback");
        slackAttachment.setText("text");
        slackAttachment.setPretext("pretext");
        slackAttachment.setColor("color");
        slackAttachment.setAuthorName("authorName");
        slackAttachment.setAuthorLink("authorLink");
        slackAttachment.setAuthorIcon("authorIcon");
        slackAttachment.setTitle("title");
        slackAttachment.setTitleLink("titleLink");
        slackAttachment.setImageUrl("imageUrl");
        slackAttachment.setThumbUrl("thumbUrl");
        slackAttachment.setMarkdownAttributes(new HashSet<>());
        slackAttachment.setFields(new ArrayList<>());
        slackAttachment.setFooter("footer");
        slackAttachment.setFooterIcon("footerIcon");
        slackAttachment.setTimestamp(new Date());

        int expected = 31 * slackAttachment.getFallback().hashCode() + slackAttachment.getText().hashCode();
        expected = 31 * expected + slackAttachment.getPretext().hashCode();
        expected = 31 * expected + slackAttachment.getColor().hashCode();
        expected = 31 * expected + slackAttachment.getAuthorName().hashCode();
        expected = 31 * expected + slackAttachment.getAuthorLink().hashCode();
        expected = 31 * expected + slackAttachment.getAuthorIcon().hashCode();
        expected = 31 * expected + slackAttachment.getTitle().hashCode();
        expected = 31 * expected + slackAttachment.getTitleLink().hashCode();
        expected = 31 * expected + slackAttachment.getImageUrl().hashCode();
        expected = 31 * expected + slackAttachment.getThumbUrl().hashCode();
        expected = 31 * expected + slackAttachment.getMarkdownAttributes().hashCode();
        expected = 31 * expected + slackAttachment.getFields().hashCode();
        expected = 31 * expected + slackAttachment.getFooter().hashCode();
        expected = 31 * expected + slackAttachment.getFooterIcon().hashCode();
        expected = 31 * expected + slackAttachment.getTimestamp().hashCode();

        int actual = slackAttachment.hashCode();

        assertEquals(expected, actual);
    }
}
